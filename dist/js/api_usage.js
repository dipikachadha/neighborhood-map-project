"use strict";const apiKeys={fsApi:{client_sec:"N3GKXU5CXFUWGHBGXBMSEOHZCKCXEW5CPFBKLQ5OIWRYDNTA",client_id:"N3GQ2ZBGXWLE1ZWXIB3SN44Z3HNO2KOKRUGJ1DYAZMEUTDX0"}};function getFourSquareData(e){const t="https://api.foursquare.com/v2/venues/search?ll="+e.location().lat+","+e.location().lng+"&client_id="+apiKeys.fsApi.client_sec+"&client_secret="+apiKeys.fsApi.client_id+"&v=20170801&query="+e.title().split(" ")[0]+"&limit=1";let n=_.partial(processFsApiResponse,e);console.log(t),fetch(t).then(e=>e.json()).then(e=>{const t="https://api.foursquare.com/v2/venues/"+e.response.venues[0].id+"?&client_id="+apiKeys.fsApi.client_sec+"&client_secret="+apiKeys.fsApi.client_id+"&v=20170801";console.log(t),fetch(t).then(e=>e.json()).then(n).catch(e=>alert("Final call: FourSquare data could not be loaded!"+e+"\n\nAll other functions on map should work fine."))}).catch(e=>alert("Init data: FourSquare data could not be loaded!"+e+"\n\nAll other functions on map should work fine."))}function processFsApiResponse(e,t){console.log(t);let n="Not Available!",o="Not Available!",s="Not Available!",i=["Not Available!","#000"];try{n=t.response.venue.name}finally{}try{o=t.response.venue.location.formattedAddress.join("\n")}finally{}try{s=t.response.venue.canonicalUrl}finally{}try{i="undefined/10"!==(i=[t.response.venue.rating+"/10","#"+t.response.venue.ratingColor])[0]?i:["Not Available!","#000"]}catch(e){i=["Not Available!","#000"]}e.infowindow=new google.maps.InfoWindow({content:`<div class="api_results">\n    <h4>FourSquare Results</h4>\n    <table id="producttable">\n      <tbody>\n        <tr>\n          <td>Name</td>\n          <td>${n}</td>\n        </tr>\n        <tr>\n          <td>URL</td>\n          <td>${s}</td>\n        </tr>\n        <tr>\n          <td>Rating</td>\n          <td style="color: ${i[1]}; font-weight: bold">\n            ${i[0]}</td>\n        </tr>\n      </tbody>\n    </table>\n    </div>`})}function getFourSquareResults(e="cary,nc"){const t="https://api.foursquare.com/v2/venues/search?near="+e+"&client_id="+apiKeys.fsApi.client_sec;apiKeys.fsApi.client_id;let n={state:"not yet searched"};fetch(t).then(e=>e.json()).then(e=>n=getApiResponse(e))}